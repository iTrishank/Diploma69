[{"/Users/samokat/Desktop/Diploma/tailmate/client/src/index.js":"1","/Users/samokat/Desktop/Diploma/tailmate/client/src/App.js":"2","/Users/samokat/Desktop/Diploma/tailmate/client/src/pages/Home.js":"3","/Users/samokat/Desktop/Diploma/tailmate/client/src/pages/OnBoarding.js":"4","/Users/samokat/Desktop/Diploma/tailmate/client/src/pages/Dashboard.js":"5","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatContainer.js":"6","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/AuthModal.js":"7","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/Nav.js":"8","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/MatchesDisplay.js":"9","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatDisplay.js":"10","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatHeader.js":"11","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/Chat.js":"12","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatInput.js":"13"},{"size":254,"mtime":1684705288197,"results":"14","hashOfConfig":"15"},{"size":862,"mtime":1684795714390,"results":"16","hashOfConfig":"15"},{"size":1631,"mtime":1684842958869,"results":"17","hashOfConfig":"15"},{"size":6553,"mtime":1686417489928,"results":"18","hashOfConfig":"15"},{"size":3215,"mtime":1684964851810,"results":"19","hashOfConfig":"15"},{"size":837,"mtime":1684971425138,"results":"20","hashOfConfig":"15"},{"size":2588,"mtime":1686653240540,"results":"21","hashOfConfig":"15"},{"size":1114,"mtime":1685464198045,"results":"22","hashOfConfig":"15"},{"size":1588,"mtime":1684972292075,"results":"23","hashOfConfig":"15"},{"size":2286,"mtime":1685464198045,"results":"24","hashOfConfig":"15"},{"size":1305,"mtime":1685538506244,"results":"25","hashOfConfig":"15"},{"size":842,"mtime":1685464198045,"results":"26","hashOfConfig":"15"},{"size":994,"mtime":1684838792294,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1q66uwl",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/samokat/Desktop/Diploma/tailmate/client/src/index.js",[],[],[],"/Users/samokat/Desktop/Diploma/tailmate/client/src/App.js",[],[],"/Users/samokat/Desktop/Diploma/tailmate/client/src/pages/Home.js",[],[],"/Users/samokat/Desktop/Diploma/tailmate/client/src/pages/OnBoarding.js",["72"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"../components/Nav\";\n\nconst OnBoarding = () => {\n  //* Get cookie value by name\n  const getCookie = (name) => {\n    const cookies = document.cookie.split(\"; \").reduce((acc, cookie) => {\n      const [cookieName, cookieValue] = cookie.split(\"=\");\n      acc[cookieName] = cookieValue;\n      return acc;\n    }, {});\n\n    return cookies[name] || \"\";\n  };\n  const [formData, setFormData] = useState({\n    user_id: getCookie(\"UserId\"),\n    first_name: \"\",\n    dob_day: \"\",\n    dob_month: \"\",\n    dob_year: \"\",\n    show_gender: false,\n    gender_identity: \"\",\n    gender_interest: \"\",\n    url: \"\",\n    about: \"\",\n    matches: [],\n  });\n\n  let navigate = useNavigate();\n\n  console.log(formData);\n\n  const setCookie = (name, value) => {\n    document.cookie = `${name}=${value}; path=/`;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(\"http://localhost:8000/user\", {\n        formData,\n      });\n      const success = response.status === 200;\n      if (success) navigate(\"/dashboard\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    const name = e.target.name;\n\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <Nav minimal={true} setShowModal={() => {}} showModal={false} />\n      <div className=\"onboarding\">\n        <h2>CREATE ACCOUNT</h2>\n        <form onSubmit={handleSubmit}>\n          <section>\n            <label htmlFor=\"first_name\">First name</label>\n            <input\n              id=\"first_name\"\n              type=\"text\"\n              name=\"first_name\"\n              placeholder=\"First Name\"\n              required={true}\n              value={formData.first_name}\n              onChange={handleChange}\n            />\n            <label>Birthday</label>\n            <div className=\"multiple-input-container\">\n              <input\n                id=\"dob_day\"\n                type=\"number\"\n                name=\"dob_day\"\n                placeholder=\"DD\"\n                required={true}\n                value={formData.dob_day}\n                onChange={handleChange}\n              />\n              <input\n                id=\"dob_month\"\n                type=\"number\"\n                name=\"dob_month\"\n                placeholder=\"MM\"\n                required={true}\n                value={formData.dob_month}\n                onChange={handleChange}\n              />\n              <input\n                id=\"dob_year\"\n                type=\"number\"\n                name=\"dob_year\"\n                placeholder=\"YYYY\"\n                required={true}\n                value={formData.dob_year}\n                onChange={handleChange}\n              />\n            </div>\n\n            <label>Gender</label>\n            <div className=\"multiple-input-container\">\n              <input\n                id=\"Golden-gender-identity\"\n                type=\"radio\"\n                name=\"gender_identity\"\n                value=\"Golden\"\n                onChange={handleChange}\n                checked={formData.gender_identity === \"Golden\"}\n              />\n              <label htmlFor=\"Golden-gender-identity\">Golden Retriever</label>\n\n              <input\n                id=\"Doberman-gender-identity\"\n                type=\"radio\"\n                name=\"gender_identity\"\n                value=\"Doberman\"\n                onChange={handleChange}\n                checked={formData.gender_identity === \"Doberman\"}\n              />\n              <label htmlFor=\"Doberman-gender-identity\">Doberman</label>\n\n              <input\n                id=\"german-gender-identity\"\n                type=\"radio\"\n                name=\"gender_identity\"\n                value=\"german\"\n                onChange={handleChange}\n                checked={formData.gender_identity === \"german\"}\n              />\n              <label htmlFor=\"more-gender-identity\">Germany Shepard</label>\n            </div>\n\n            <label htmlFor=\"show-gender\">Show gender on my profile</label>\n            <input\n              id=\"show-gender\"\n              type=\"checkbox\"\n              name=\"show_gender\"\n              onChange={handleChange}\n              checked={formData.show_gender}\n            />\n            <label>Show Me</label>\n            <div className=\"multiple-input-container\">\n              <input\n                id=\"Golden-gender-interest\"\n                type=\"radio\"\n                name=\"gender_interest\"\n                value=\"Golden\"\n                onChange={handleChange}\n                checked={formData.gender_interest === \"Golden\"}\n              />\n              <label htmlFor=\"Golden-gender-interest\">Golden Retriever</label>\n              <input\n                id=\"Doberman-gender-interest\"\n                type=\"radio\"\n                name=\"gender_interest\"\n                value=\"Doberman\"\n                onChange={handleChange}\n                checked={formData.gender_interest === \"Doberman\"}\n              />\n              <label htmlFor=\"Doberman-gender-interest\">Doberman</label>\n\n              <input\n                id=\"german-gender-interest\"\n                type=\"radio\"\n                name=\"gender_interest\"\n                value=\"german\"\n                onChange={handleChange}\n                checked={formData.gender_interest === \"german\"}\n              />\n              <label htmlFor=\"everyone-gender-interest\">Germany Shepard</label>\n            </div>\n            <label htmlFor=\"about\">About Me</label>\n            <input\n              id=\"about\"\n              type=\"text\"\n              name=\"about\"\n              required={true}\n              placeholder=\"I like bones..\"\n              value={formData.about}\n              onChange={handleChange}\n            />\n            <input type=\"submit\" />\n          </section>\n\n          <section>\n            <label htmlFor=\"url\">Profile Photo</label>\n            <input\n              type=\"url\"\n              name=\"url\"\n              id=\"url\"\n              onChange={handleChange}\n              required={true}\n            />\n            <div className=\"photo-container\">\n              {formData.url && (\n                <img src={formData.url} alt=\"Profile pic Preview\" />\n              )}\n            </div>\n          </section>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default OnBoarding;\n","/Users/samokat/Desktop/Diploma/tailmate/client/src/pages/Dashboard.js",["73","74"],[],"import React, { useEffect, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport axios from \"axios\";\n\nconst Dashboard = () => {\n  const getCookie = (name) => {\n    const cookies = document.cookie.split(\"; \").reduce((acc, cookie) => {\n      const [cookieName, cookieValue] = cookie.split(\"=\");\n      acc[cookieName] = cookieValue;\n      return acc;\n    }, {});\n\n    return cookies[name] || \"\";\n  };\n\n  const userId = getCookie(\"UserId\");\n  const [lastDirection, setLastDirection] = useState();\n  const [user, setUser] = useState(null);\n  const [genderedUsers, setGenderedUsers] = useState(null);\n\n  const getUser = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/user\", {\n        params: { userId },\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getGenderedUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/gendered-users\", {\n        params: { gender: user?.gender_interest },\n      });\n      setGenderedUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      getGenderedUsers();\n    }\n  }, [user]);\n\n  const updateMatches = async (matchedUserId) => {\n    try {\n      await axios.put(\"http://localhost:8000/addmatch\", {\n        userId,\n        matchedUserId,\n      });\n      getUser();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(user);\n\n  const swiped = (direction, swipedUserId) => {\n    //! Swiping algorithms\n    if (direction === \"right\") {\n      updateMatches(swipedUserId);\n    }\n    setLastDirection(direction);\n  };\n\n  const outOfFrame = (name) => {\n    console.log(name + \" left the screen!\");\n  };\n\n  const matchedUserIds = user?.matches\n    .map(({ user_id }) => user_id)\n    .concat(userId);\n\n  const filteredGenderedUsers = genderedUsers?.filter(\n    (genderedUser) => !matchedUserIds.includes(genderedUser.user_id)\n  );\n  return (\n    <>\n      {user && (\n        <div className=\"dashboard\">\n          <ChatContainer user={user} />\n          <div className=\"swipe-container\">\n            <div className=\"card-container\">\n              {filteredGenderedUsers?.map((genderedUser) => (\n                <TinderCard\n                  className=\"swipe\"\n                  key={genderedUser.user_id}\n                  onSwipe={(dir) => swiped(dir, genderedUser.user_id)}\n                  onCardLeftScreen={() => outOfFrame(genderedUser.first_name)}\n                >\n                  <div\n                    style={{\n                      backgroundImage: \"url(\" + genderedUser.url + \")\",\n                    }}\n                    className=\"card\"\n                  >\n                    <h3>{genderedUser.first_name}</h3>\n                  </div>\n                </TinderCard>\n              ))}\n              <div className=\"swipe-info\">\n                {lastDirection ? <p>You swiped {lastDirection}</p> : <p />}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatContainer.js",[],[],"/Users/samokat/Desktop/Diploma/tailmate/client/src/components/AuthModal.js",[],[],"/Users/samokat/Desktop/Diploma/tailmate/client/src/components/Nav.js",[],[],"/Users/samokat/Desktop/Diploma/tailmate/client/src/components/MatchesDisplay.js",["75","76"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst MatchesDisplay = ({ matches, setClickedUser }) => {\n  const getCookie = (name) => {\n    const cookies = document.cookie.split(\"; \").reduce((acc, cookie) => {\n      const [cookieName, cookieValue] = cookie.split(\"=\");\n      acc[cookieName] = cookieValue;\n      return acc;\n    }, {});\n\n    return cookies[name] || \"\";\n  };\n\n  const userId = getCookie(\"UserId\");\n\n  const [matchedProfiles, setMatchedProfiles] = useState(null);\n  const matchedUserIds = matches.map(({ user_id }) => user_id);\n\n  const getMatches = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/users\", {\n        params: { userIds: JSON.stringify(matchedUserIds) },\n      });\n      setMatchedProfiles(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getMatches();\n  }, [matches]);\n\n  const filteredMatchedProfiles = matchedProfiles?.filter(\n    (matchedProfile) =>\n      matchedProfile.matches.filter((profile) => profile.user_id == userId)\n        .length > 0\n  );\n\n  return (\n    <div className=\"matches-display\">\n      {filteredMatchedProfiles?.map((match, _index) => (\n        <div\n          key={_index}\n          className=\"match-card\"\n          onClick={() => setClickedUser(match)}\n        >\n          <div className=\"img-container\">\n            <img src={match?.url} alt={match?.first_name + \" profile\"} />\n          </div>\n          <h3>{match?.first_name}</h3>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MatchesDisplay;\n","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatDisplay.js",["77"],[],"import React, { useEffect, useState } from \"react\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport axios from \"axios\";\n\nconst ChatDisplay = ({ user, clickedUser }) => {\n  const userId = user?.user_id;\n  const clickedUserId = clickedUser?.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: { userId: userId, correspondingUserId: clickedUserId },\n      });\n      setUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClickedUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: { userId: clickedUserId, correspondingUserId: userId },\n      });\n      setClickedUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n  }, []); //! it makes eveything run so many times\n\n  const messages = [];\n\n  usersMessages?.forEach((message) => {\n    const formattedMessage = {};\n    formattedMessage[\"name\"] = user?.first_name;\n    formattedMessage[\"img\"] = user?.url;\n    formattedMessage[\"message\"] = message.message;\n    formattedMessage[\"timestamp\"] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n\n  clickedUsersMessages?.forEach((message) => {\n    const formattedMessage = {};\n    formattedMessage[\"name\"] = clickedUser?.first_name;\n    formattedMessage[\"img\"] = clickedUser?.url;\n    formattedMessage[\"message\"] = message.message;\n    formattedMessage[\"timestamp\"] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n\n  console.log(clickedUsersMessages);\n  const descendingOrderMessages = messages?.sort((a, b) =>\n    a.timestamp.localeCompare(b.timestamp)\n  );\n\n  return (\n    <>\n      <Chat descendingOrderMessages={descendingOrderMessages} />\n      <ChatInput\n        user={user}\n        clickedUser={clickedUser}\n        getUsersMessages={getUsersMessages}\n        getClickedUsersMessages={getClickedUsersMessages}\n      />\n    </>\n  );\n};\n\nexport default ChatDisplay;\n","/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatHeader.js",[],[],"/Users/samokat/Desktop/Diploma/tailmate/client/src/components/Chat.js",[],[],"/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatInput.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":35,"column":9,"nodeType":"80","messageId":"81","endLine":35,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":46,"column":6,"nodeType":"84","endLine":46,"endColumn":8,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":52,"column":6,"nodeType":"84","endLine":52,"endColumn":12,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":33,"column":6,"nodeType":"84","endLine":33,"endColumn":15,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":37,"column":66,"nodeType":"92","messageId":"93","endLine":37,"endColumn":68},{"ruleId":"82","severity":1,"message":"94","line":36,"column":6,"nodeType":"84","endLine":36,"endColumn":8,"suggestions":"95"},"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'getGenderedUsers'. Either include it or remove the dependency array.",["97"],"React Hook useEffect has a missing dependency: 'getMatches'. Either include it or remove the dependency array.",["98"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getClickedUsersMessages' and 'getUsersMessages'. Either include them or remove the dependency array.",["99"],{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [getUser]",{"range":"108","text":"109"},"Update the dependencies array to be: [getGenderedUsers, user]",{"range":"110","text":"111"},"Update the dependencies array to be: [getMatches, matches]",{"range":"112","text":"113"},"Update the dependencies array to be: [getClickedUsersMessages, getUsersMessages]",{"range":"114","text":"115"},[1248,1250],"[getUser]",[1327,1333],"[getGenderedUsers, user]",[909,918],"[getMatches, matches]",[1113,1115],"[getClickedUsersMessages, getUsersMessages]"]