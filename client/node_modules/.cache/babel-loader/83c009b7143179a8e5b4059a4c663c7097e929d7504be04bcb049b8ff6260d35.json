{"ast":null,"code":"var _jsxFileName = \"/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = (user, clickedUser) => {\n  _s();\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClickedUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      });\n      setClickedUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n  }, [usersMessages, clickedUsersMessages]);\n  console.log(usersMessages); //! need to remove it\n\n  const messages = [];\n  usersMessages === null || usersMessages === void 0 ? void 0 : usersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage[\"name\"] = user === null || user === void 0 ? void 0 : user.first_name;\n    formattedMessage[\"img\"] = user === null || user === void 0 ? void 0 : user.url;\n    formattedMessage[\"message\"] = message.message;\n    formattedMessage[\"timestamp\"] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  console.log(\"userMessages\", userMessages);\n  console.log(\"formattedMessage\", messages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"2NEB42wPVsAhSx/Wnejt8YtyMTY=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["React","useEffect","useState","Chat","ChatInput","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDisplay","user","clickedUser","_s","userId","user_id","clickedUserId","usersMessages","setUsersMessages","clickedUsersMessages","setClickedUsersMessages","getUsersMessages","response","get","params","correspondingUserId","data","error","console","log","getClickedUsersMessages","messages","forEach","message","formattedMessage","first_name","url","timestamp","push","userMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samokat/Desktop/Diploma/tailmate/client/src/components/ChatDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport axios from \"axios\";\n\nconst ChatDisplay = (user, clickedUser) => {\n  const userId = user?.user_id;\n  const clickedUserId = clickedUser?.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: { userId: userId, correspondingUserId: clickedUserId },\n      });\n      setUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClickedUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: { userId: clickedUserId, correspondingUserId: userId },\n      });\n      setClickedUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n  }, [usersMessages, clickedUsersMessages]);\n\n  console.log(usersMessages); //! need to remove it\n\n  const messages = [];\n\n  usersMessages?.forEach((message) => {\n    const formattedMessage = {};\n    formattedMessage[\"name\"] = user?.first_name;\n    formattedMessage[\"img\"] = user?.url;\n    formattedMessage[\"message\"] = message.message;\n    formattedMessage[\"timestamp\"] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n\n  console.log(\"userMessages\", userMessages);\n  console.log(\"formattedMessage\", messages);\n\n  return (\n    <>\n      <Chat />\n      <ChatInput />\n    </>\n  );\n};\n\nexport default ChatDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}